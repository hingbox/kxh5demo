/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  *//* ModelError  - error thrown by api includes error code to return when error is thrown in API       *//* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */'use strict';/** * Extend Error with ModelError which includes message and (http) status. * * @param moduleName module's name * @param code  error code * @param message Message associated with error * @constructor * * qv stackoverflow.com/questions/1382107#answer-8460753 * also: developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/proto */function ModelError (moduleName, code, message) {  if (!(this instanceof ModelError)) return new ModelError(moduleName, code, message);  Object.setPrototypeOf(this.constructor.prototype, Error.prototype);  Error.captureStackTrace(this, this.constructor);  this.success= false;  this.module = moduleName;  this.code = code;  this.message = message;}module.exports = ModelError;